1768. Merge Strings Alternately
Easy
1.1K
18
Companies
You are given two strings word1 and word2. Merge the strings by adding letters in alternating order, starting with word1. If a string is longer than the other, append the additional letters onto the end of the merged string.

Return the merged string.

 

Example 1:

Input: word1 = "abc", word2 = "pqr"
Output: "apbqcr"
Explanation: The merged string will be merged as so:
word1:  a   b   c
word2:    p   q   r
merged: a p b q c r
Example 2:

Input: word1 = "ab", word2 = "pqrs"
Output: "apbqrs"
Explanation: Notice that as word2 is longer, "rs" is appended to the end.
word1:  a   b 
word2:    p   q   r   s
merged: a p b q   r   s
Example 3:

Input: word1 = "abcd", word2 = "pq"
Output: "apbqcd"
Explanation: Notice that as word1 is longer, "cd" is appended to the end.
word1:  a   b   c   d
word2:    p   q 
merged: a p b q c   d
 

Constraints:

1 <= word1.length, word2.length <= 100
word1 and word2 consist of lowercase English letters.
Accepted
103.1K
Submissions
131.9K
Acceptance Rate
78.2%



ðŸ’»âœ”â›³ C++ || String || Two Pointers
_prabal_singh_
100 Days Badge 2022
16
a few seconds ago
Intuition
Basic traversal .

https://leetcode.com/problems/merge-strings-alternately/submissions/935529308/

Approach
Keep two pointers respectively for each string.
And push the value of current pointer of both strings into res string and increment both the pointers simultaneously.
If any string is longer than other , add it characters to res after the end of mutual traversal.
images.jfif

Complexity
Time complexity : O(N1+N2)
Space complexity : O(1)
Code
class Solution {
public:
    string mergeAlternately(string word1, string word2) {
        int n1 = word1.size();
        int n2 = word2.size();

        int i=0, j=0;
        string res;

        while(i<n1 && j<n2) {
            res += word1[i++];
            res += word2[j++];
        }

        while(i<n1) res += word1[i++];
        while(j<n2) res += word2[j++];

        return res;
    }
};